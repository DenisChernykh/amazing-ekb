// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  images      Image[]
  tgPostUrl   String
  price       String
  mapUrl      String
  publishedAt DateTime?
}

model Profile {
  id         String   @id @default(cuid())
  telegramId String   @unique
  firstName  String
  lastName   String?
  username   String?
  avatar     String?
  role       Role     @default(USER)
  createdAt  DateTime @default(now())
  updatetAd  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model TelegramPost {
  id       String   @id
  text     String
  date     DateTime
  postLink String
  images   Image[]
}

model Image {
  id             String        @id @default(uuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  filename       String?
  TelegramPost   TelegramPost? @relation(fields: [telegramPostId], references: [id], onDelete: Cascade)
  telegramPostId String?
  imageUrl       String?
  altText        String?
  mainImage      Boolean?
  post           Post?         @relation(fields: [postId], references: [id])
  postId         String?
}

model Category {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  name      String   @unique
}
